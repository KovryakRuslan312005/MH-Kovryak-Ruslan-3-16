{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/KovryakRuslan312005/MH-Kovryak-Ruslan-3-16/blob/main/%20Kovryak%20Ruslan\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "zwFnJsE6vjf8"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 1\n",
        "def task_1():\n",
        "    matrix = np.random.randint(1, 8, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_1()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P8QFmiTu2QGc",
        "outputId": "e8af224b-b14e-447d-8f41-c228289b514a"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[4 6]\n",
            " [7 7]]\n",
            "Обернена матриця:\n",
            " [[-0.5         0.42857143]\n",
            " [ 0.5        -0.28571429]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 2\n",
        "def task_2():\n",
        "    matrix = np.random.randint(1, 13, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_2()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gC43Wkxu2FrN",
        "outputId": "eebbfb70-55c2-427f-f06a-9656e60e1831"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[11  6  8]\n",
            " [12  9  7]\n",
            " [ 3  4  8]]\n",
            "Обернена матриця:\n",
            " [[ 0.21782178 -0.07920792 -0.14851485]\n",
            " [-0.37128713  0.31683168  0.09405941]\n",
            " [ 0.1039604  -0.12871287  0.13366337]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 3\n",
        "def task_3():\n",
        "    matrix = np.random.randint(1, 9, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_3()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cNctVdPZ2mVM",
        "outputId": "53f86e17-9d7e-4906-e0b5-e8a4f696c91a"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[3 6]\n",
            " [8 1]]\n",
            "Обернена матриця:\n",
            " [[-0.02222222  0.13333333]\n",
            " [ 0.17777778 -0.06666667]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 4\n",
        "def task_4():\n",
        "    matrix = np.random.randint(1, 16, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_4()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L-4UrzEs2mSk",
        "outputId": "2d992bb5-50aa-4385-c64a-d2303be8ec17"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[15  8  8]\n",
            " [15  7 11]\n",
            " [ 1  4  1]]\n",
            "Обернена матриця:\n",
            " [[ 0.22699387 -0.14723926 -0.19631902]\n",
            " [ 0.02453988 -0.04294479  0.27607362]\n",
            " [-0.32515337  0.3190184   0.09202454]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 5\n",
        "def task_5():\n",
        "    matrix = np.random.randint(1, 11, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_5()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FV962OiR2mQE",
        "outputId": "4547fafe-7974-4209-e872-a5c85961c0d2"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[2 3]\n",
            " [7 3]]\n",
            "Обернена матриця:\n",
            " [[-0.2         0.2       ]\n",
            " [ 0.46666667 -0.13333333]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 6\n",
        "def task_6():\n",
        "    matrix = np.random.randint(1, 9, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_6()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pZQrBUQc2mDk",
        "outputId": "f0cdcaea-66e1-4128-fa66-9ff9c6205455"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[1 5 8]\n",
            " [7 1 4]\n",
            " [7 4 8]]\n",
            "Обернена матриця:\n",
            " [[-0.4  -0.4   0.6 ]\n",
            " [-1.4  -2.4   2.6 ]\n",
            " [ 1.05  1.55 -1.7 ]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 7\n",
        "def task_7():\n",
        "    matrix = np.random.randint(1, 13, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_7()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DVsvpO4b2mBE",
        "outputId": "99e42477-1029-4c6a-e0ff-9c698d17fa54"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[ 2  8]\n",
            " [ 1 11]]\n",
            "Обернена матриця:\n",
            " [[ 0.78571429 -0.57142857]\n",
            " [-0.07142857  0.14285714]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 8\n",
        "def task_8():\n",
        "    matrix = np.random.randint(1, 8, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_8()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7iVLD96J2l-0",
        "outputId": "b736d48a-4a29-4af7-8896-e4fe77dd3710"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[5 6 4]\n",
            " [5 2 7]\n",
            " [5 2 4]]\n",
            "Обернена матриця:\n",
            " [[-0.1        -0.26666667  0.56666667]\n",
            " [ 0.25       -0.         -0.25      ]\n",
            " [-0.          0.33333333 -0.33333333]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 9\n",
        "def task_9():\n",
        "    matrix = np.random.randint(1, 16, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_9()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H2W4t4JG2l8s",
        "outputId": "6a9a3086-7a00-4d60-c845-15227f7b8de2"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[ 9  6]\n",
            " [15  1]]\n",
            "Обернена матриця:\n",
            " [[-0.01234568  0.07407407]\n",
            " [ 0.18518519 -0.11111111]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 10\n",
        "def task_10():\n",
        "    matrix = np.random.randint(1, 11, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_10()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QaFQwOLh2l6c",
        "outputId": "6acdc294-11b5-496f-caa5-69d0a3d40c21"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[ 9  5  1]\n",
            " [ 6  9  5]\n",
            " [10  2  3]]\n",
            "Обернена матриця:\n",
            " [[ 0.07234043 -0.05531915  0.06808511]\n",
            " [ 0.13617021  0.07234043 -0.16595745]\n",
            " [-0.33191489  0.13617021  0.21702128]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 11\n",
        "def task_11():\n",
        "    matrix = np.random.randint(1, 12, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_11()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DdNDkYHH2l4s",
        "outputId": "2efeab41-22b3-4d4b-c2e5-a025e3f5c607"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[ 9  2]\n",
            " [ 9 11]]\n",
            "Обернена матриця:\n",
            " [[ 0.13580247 -0.02469136]\n",
            " [-0.11111111  0.11111111]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 12\n",
        "def task_12():\n",
        "    matrix = np.random.randint(1, 8, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_12()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WfhtQzZa2l2U",
        "outputId": "567e6e12-76c8-477a-f30e-0566c444cb91"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[2 4 5]\n",
            " [5 5 5]\n",
            " [2 4 6]]\n",
            "Обернена матриця:\n",
            " [[-1.   0.4  0.5]\n",
            " [ 2.  -0.2 -1.5]\n",
            " [-1.   0.   1. ]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 13\n",
        "def task_13():\n",
        "    matrix = np.random.randint(1, 16, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_13()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TU7BM89S2l0k",
        "outputId": "0b011ee7-95d2-49e7-cf9f-92d0b1952977"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[7 6]\n",
            " [9 4]]\n",
            "Обернена матриця:\n",
            " [[-0.15384615  0.23076923]\n",
            " [ 0.34615385 -0.26923077]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 14\n",
        "def task_14():\n",
        "    matrix = np.random.randint(1, 11, (3, 3))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_14()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QuNC65Fo2lyE",
        "outputId": "c883b045-05ce-42cb-a9e7-15795d8ef96d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[ 1  1  6]\n",
            " [10  8  3]\n",
            " [ 5  5  7]]\n",
            "Обернена матриця:\n",
            " [[ 8.91304348e-01  5.00000000e-01 -9.78260870e-01]\n",
            " [-1.19565217e+00 -5.00000000e-01  1.23913043e+00]\n",
            " [ 2.17391304e-01 -6.03382079e-18 -4.34782609e-02]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Завдання 15\n",
        "def task_15():\n",
        "    matrix = np.random.randint(1, 8, (2, 2))\n",
        "    print(\"Матриця:\\n\", matrix)\n",
        "    if np.linalg.det(matrix) != 0:\n",
        "        print(\"Обернена матриця:\\n\", np.linalg.inv(matrix))\n",
        "    else:\n",
        "        print(\"Обернена матриця не існує.\")\n",
        "\n",
        "task_15()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QwrnDdfN2lq0",
        "outputId": "7cb706f9-3f2a-4b44-aab3-518722a32cf6"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Матриця:\n",
            " [[7 3]\n",
            " [5 1]]\n",
            "Обернена матриця:\n",
            " [[-0.125  0.375]\n",
            " [ 0.625 -0.875]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "o3jZf2Rm2ldk"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "name": "Вітаємо в Colaboratory",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}